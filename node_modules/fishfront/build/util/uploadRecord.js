'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _env = require('../runtime/env');

var _env2 = _interopRequireDefault(_env);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var __recorder; //录音器
// import Recorder from './recorder'
var __supportRecord = true; //设备是否支持录音
var audio_context;

exports.default = {

	startUserMedia: function startUserMedia(stream) {
		var input = audio_context.createMediaStreamSource(stream);
		__recorder = new Recorder(input);
	},

	init: function init() {
		try {
			window.AudioContext = window.AudioContext || window.webkitAudioContext;
			navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;
			window.URL = window.URL || window.webkitURL;
			audio_context = new AudioContext();

			if (navigator.getUserMedia) {
				navigator.getUserMedia({ audio: true }, this.startUserMedia, function (e) {
					// console.log(e);
					__supportRecord = false;
				});
			} else {
				throw new Error("不支持录音功能");
			}
		} catch (e) {
			// throw new Error(e);
			__supportRecord = false;
		}
	},

	_wxRecord: function _wxRecord(defaultOption) {
		var currentLocalId = null;
		var currentServerId = null;
		//开始录音
		function _start(next) {
			next = next || function () {};
			wx.startRecord();
			wx.onVoiceRecordEnd({ //  录音时间超过一分钟没有停止的时候会执行 complete 回调
				complete: function complete(res) {
					currentLocalId = res.localId;
					_uploadLocalIdToServer(next);
				}
			});
		}
		//停止录音
		function _stop(next) {
			next = next || function () {};

			wx.stopRecord({
				success: function success(res) {
					currentLocalId = res.localId;
					_uploadLocalIdToServer(next);
				},
				fail: function fail(e) {
					defaultOption.onFail('录音失败:' + JSON.stringify(e));
				}
			});
		}
		//取消录音
		function _cancel(next) {
			next = next || function () {};
			wx.stopRecord();
			next();
		}
		//将微信语音上传到我们服务器
		function _uploadLocalIdToServer(next) {
			_uploadToWxServer(function () {
				_uploadWxServerIdToServer(function () {
					next();
				});
			});
		}
		//将微信本地语音上传到微信服务器
		function _uploadToWxServer(next) {
			wx.uploadVoice({
				localId: currentLocalId,
				isShowProgressTips: 0, // 默认为1，显示进度提示
				success: function success(res) {
					currentServerId = res.serverId;
					defaultOption.onProgress(0);
					next();
				},
				fail: function fail(e) {
					defaultOption.onFail('上传语音到微信服务器失败');
				}
			});
		}
		//上传微信语音serverId到我们服务器
		function _uploadWxServerIdToServer(next) {
			//构造数据
			var formData = new FormData();
			formData.append('data', currentServerId);
			//提交表单
			var progress = function progress(e) {
				if (e.lengthComputable) {
					var progress = Math.ceil(100 * (e.loaded / e.total));
					defaultOption.onProgress(progress);
				}
			};
			var complete = function complete(e) {
				defaultOption.onSuccess(e.target.response);
				next();
			};
			var failed = function failed() {
				defaultOption.onFail('上传微信语音断开，请稍后重新操作');
				next();
			};
			var abort = function abort() {
				defaultOption.onFail('上传已取消');
				next();
			};
			var httpReuqest = new XMLHttpRequest();
			if (httpReuqest.upload) {
				httpReuqest.upload.addEventListener('progress', progress, false);
			}
			httpReuqest.open("POST", defaultOption.url + '?t=' + Date.now(), true);
			httpReuqest.addEventListener('progress', progress, false);
			httpReuqest.addEventListener("load", complete, false);
			httpReuqest.addEventListener("abort", abort, false);
			httpReuqest.addEventListener("error", failed, false);
			httpReuqest.send(formData);
		}
		defaultOption.onStartOrStop({
			start: _start,
			stop: _stop,
			cancel: _cancel
		});
	},
	_record: function _record(defaultOption) {
		this.init();
		var currentFile = null;
		// console.log(__recorder);
		//开始录音
		function _start() {
			if (_checkIsSupportedInBroswer()) {
				__recorder.record();
			} else {
				defaultOption.onFail('不支持录音功能');
			}
		}
		//停止录音
		function _stop(next) {
			next = next || function () {};

			if (_checkIsSupportedInBroswer()) {
				__recorder.stop();
				recorder.exportWAV(function (blob) {
					currentFile = blob;
					_uploadFileToServer(next);
				});
				__recorder.clear();
			}
		}
		//取消录音
		function _cancel(next) {
			next = next || function () {};
			if (_checkIsSupportedInBroswer()) {
				__recorder.stop();
				__recorder.clear();
			}
			next();
		}

		function _checkIsSupportedInBroswer() {
			return __recorder && __supportRecord;
		}

		//上传本地语音file到我们服务器
		function _uploadFileToServer(next) {
			//构造数据
			var formData = new FormData();
			formData.append('data', currentFile);
			//提交表单
			var progress = function progress(e) {
				if (e.lengthComputable) {
					defaultOption._progress = Math.ceil(100 * (e.loaded / e.total));
					defaultOption.onProgress(defaultOption._progress);
				}
			};
			var complete = function complete(e) {
				defaultOption.onSuccess(e.target.response);
				next();
			};
			var failed = function failed() {
				defaultOption.onFail('网络断开，请稍后重新操作');
				next();
			};
			var abort = function abort() {
				defaultOption.onFail('上传已取消');
				next();
			};
			var httpReuqest = new XMLHttpRequest();
			if (httpReuqest.upload) {
				httpReuqest.upload.addEventListener('progress', progress, false);
			}
			httpReuqest.open("POST", defaultOption.url + '?t=' + Date.now(), true);
			httpReuqest.addEventListener('progress', progress, false);
			httpReuqest.addEventListener("load", complete, false);
			httpReuqest.addEventListener("abort", abort, false);
			httpReuqest.addEventListener("error", failed, false);
			httpReuqest.send(formData);
		}
		defaultOption.onStartOrStop({
			start: _start,
			stop: _stop,
			cancel: _cancel
		});
	},

	record: function record(option) {
		//初始化option
		var defaultOption = {
			url: '',
			onStartOrStop: function onStartOrStop(data) {},
			onSuccess: function onSuccess() {},
			onProgress: function onProgress(data) {},
			onFail: function onFail(msg) {}
		};
		defaultOption = Object.assign(defaultOption, option);
		//处理
		if (_env2.default.isInWeixin()) {
			return this._wxRecord(defaultOption);
		} else {
			return this._record(defaultOption);
		}
	}

};

/*
@用法

record.init();//只需调用一次

record.start((data)=>{
	if(data.code != 0){
		dialog.message(data.msg);
	}else{
		data.data //录音链接
	}
});

record.stop();//完成录音


*/