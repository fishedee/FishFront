'use strict';

Object.defineProperty(exports, "__esModule", {
	value: true
});

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _env = require('../runtime/env');

var _env2 = _interopRequireDefault(_env);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

exports.default = _react2.default.createClass({
	displayName: 'react-document-head',

	contextTypes: {
		documentHead: _react2.default.PropTypes.object
	},
	getInitialState: function getInitialState() {
		if (_env2.default.isInBrowser()) {
			this.updateTitle(this.props.title);
		} else {
			this.updateContext(this.props);
		}
		return {};
	},
	componentWillReceiveProps: function componentWillReceiveProps(nextProps) {
		if (_env2.default.isInBrowser()) {
			this.updateTitle(nextProps.title);
		} else {
			this.updateContext(nextProps);
		}
	},
	updateTitle: function updateTitle(title) {
		if (!title) return;
		var body = document.body;
		document.title = title;
		var iframe = document.createElement("iframe");
		iframe.setAttribute("key", this.props.title);
		iframe.setAttribute("style", "display:none;width:0px;height:0px");
		iframe.setAttribute("src", '/logo.ico');

		body.appendChild(iframe);
		iframe.addEventListener('load', function () {
			setTimeout(function () {
				iframe.removeEventListener('load', function () {});
				body.removeChild(iframe);
			}, 0);
		});
	},
	updateContext: function updateContext(nextProps) {
		if (this.context && this.context.documentHead) {
			this.context.documentHead.setHeader(nextProps);
		}
	},
	render: function render() {
		return null;
	}
});