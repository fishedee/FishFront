import ImmutableRenderMixin from '../react-immutable-render-mixin';
import Immutable from 'immutable';
import React from 'react';
import Env from '../../runtime/env';
import Url from '../../encoding/url';

var okSetState = {
	getInitialState(){
		this._oldSetState = this.setState;
		this.setState = function(obj){
			if(!this.isMounted()){
				return;
			}
			this._oldSetState(obj)
		}
		return {};
	}
}

function createClass(proto){
	if( !proto.mixins ){
		proto.mixins = [];
	}
	proto.mixins.push(okSetState);
	proto.mixins.push(ImmutableRenderMixin);
	proto.contextTypes = {
        history: React.PropTypes.object.isRequired,
    }
	proto.go = function(url){
		var urlInfo = Url.toInfo(url);
		this.context.history.pushState(null,urlInfo.originpathname+urlInfo.originsearch);
	}
	proto.back = function(){
		this.context.history.goBack();
	}
	proto.replace = function(url){
		var urlInfo = Url.toInfo(url);
		this.context.history.replaceState(null,urlInfo.originpathname+urlInfo.originsearch);
	}
	return React.createClass(proto);
}

var Views = {
	createClass:createClass
};

Env.exportGlobal('Views',Views);
Env.exportGlobal('React',React);
Env.exportGlobal('Immutable',Immutable);
export default Views;