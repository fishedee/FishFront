import base64 from '../encoding/base64';
export default {
	open:function(option){
		//处理option
		option = option || {};
		var defaultOption = {
			file:null,
			mode:'binary',
			onStart:function(){
			},
			onProgress:function(e){
			},
			onSuccess:function(){
			},
			onFail:function(msg){
			},
			onStop:function(){
			}
		};
		for( var i in option )
			defaultOption[i] = option[i];
		defaultOption.mode = defaultOption.mode.toLowerCase();
		//开始执行
		defaultOption.onStart();
		if( typeof window.FileReader  == 'undefined' ||
			typeof window.Blob  == 'undefined'){
			defaultOption.onFail('您的浏览器不支持FileReader');
			defaultOption.onStop();
			return;
		}
		var reader  = new FileReader();
		reader.onabort = function(){
			defaultOption.onFail('读取文件失败');
			defaultOption.onStop();
		};
		reader.onerror = function(){
			defaultOption.onFail('读取文件失败');
			defaultOption.onStop();
		};
		reader.onprogress = function(e){
			var percent = 0;
			if(e.lengthComputable){
				var percent = Math.ceil(100 * (e.loaded / e.total));
			}
			defaultOption.onProgress(percent);
		};
		reader.onload = function(e){
			if( defaultOption.mode == 'binary'
				&& typeof reader.readAsBinaryString == 'undefined' ){
				defaultOption.onSuccess(base64.decode(this.result.substr(this.result.indexOf(',')+1),false));
				defaultOption.onStop();
			}else{
				defaultOption.onSuccess(this.result);
				defaultOption.onStop();
			}
		};
		if( defaultOption.mode == 'text'){
			//文本格式
			reader.readAsText(defaultOption.file);
		}else if( defaultOption.mode == 'dataurl'){
			//dataurl格式
			reader.readAsDataURL(defaultOption.file);
		}else if( defaultOption.mode == 'arraybuffer' ){
			//arraybuffer格式
			reader.readAsArrayBuffer(defaultOption.file);
		}else{
			defaultOption.mode = 'binary';
			//二进制格式
			if( reader.readAsBinaryString )
				reader.readAsBinaryString(defaultOption.file);
			else
				reader.readAsDataURL(defaultOption.file);
		}
	}
};